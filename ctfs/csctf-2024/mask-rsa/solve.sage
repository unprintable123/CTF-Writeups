from Crypto.Util.number import getPrime, bytes_to_long, long_to_bytes

FLAG = b'flag{this_is_a_fake_flag_101029837924783253487645667856278}'
m = bytes_to_long(FLAG)
real_values = [(49666959624264410736118485952549664871329428241738463619283881596529220124074851155744273160333287163768200418029444912011613139514470119412391833213158338877360239092625953959100385527253602340328852872070078660131339744567541486870468734721630420676760226234171098692246935496835361867574696994936561631361, 3748444410759179243765487130197224831905350861953950057804682497322108342998895146205803809961327538830571057883129689928911086835832031095135993657721834526416383442436069294824705101818276808123714894848775375442445644779409128119380534205395455338477049796931601063199369338879717235357144418128613859087), (367523241041577408516154837074333617274307094477777857973949375712483553782489000737506238433853160733433287562943507708770302506539902601342121320517853461640426109427531394253316933690599222866515576627053130985537976848019237520291895788460684856393580992946914141107062295549080641063845677669558409676871, 4996142201518070174579607758241692369189504548410079009900659812192717157835983946666746173922419231819018011555393201258433327420528136354664398101740914577719977970256770582001283634108400823064192595382434335324508192223330957668686041731405833522393626805864611074355113956316192875918510426961677737121), (199698286523214660999134847899245732625005686239981309057990417105545104675974994810806780460300544614559111831823010822810664308183536690798032951767563720463050435087876852258178888996843266270968974433532222788945135260875964059285439816386179789007385924388063543838262743434709020851182699965902159624919, 1253211042056599225886302534732580333775193568010331740318447331918400736221679400224536155826544160350102226513973933930000618535212547559276659183256094333226830215585402838495523035127968798384429858545642716087436879267784386008000547506094346366255871837341877240297702188847649549540644123224770036907),(172114191381621624717671227186946601784460711131539446925329076114949603979057746402260849210627594748388563612573382352515614099268646679184258024361534904038598992510948278521679509038696139532963908505033973286259436562501063449930414218119473526591700482396949069235175713683317058752408816363714215533216, 4971262919476997958297923772926377326969243827051778037930662048430400477990620117242795730583993751525032341434521855598368730459677176682272609683965154558591628016010295328066339744393853893880480885457699987223302370962726977629268953050541458869140638115221934713511077733908505027187378200544321699430),(99724214937637827812065346189294187329709555811056578839048840846431957147500766849091618999687423667512986295711059790063450703200894799926466182643390057295169543588444403510729010825762423254564922014686565782377865860371198305902282952046635261897474482960553107974252960453990621119941725946667900358262, 6606840243524150620124779101190532397100331253261927962740744905492706814664801482814513133388039369411666709868380583684606139546255517124291992203941417374213958762915114668674294940978804921799329708140420866519298081516633252153894921887807024905049464298357746872087306220751004130599412281999489094256),(293863459906075696259806417745974782744504718420593255600386532286549351353273038630270358419369040739402499326360668848893251517998734119614206381215765354137295221798224245643137056258076587873685472249646669698073889397923260882614823403988649516015355971969921496748477637753610108050693940082456683575831, 5310686007494064163217200443597111353889669305905229461683276079936950355438693625628611472456647788857334630302963639118036876246482312928100530602697933885253464899553758124391927551096542854230488393305779923512453673289219814047758277104458229910621489613344554592620520927170491550387154731365245004159),(452807222039467191192457288003306329329207685257496835204765697981949747110911597997900979307613365876456739371874853759127379459133747723018111641816512931589066151477900187390228561801597095794073785143219045996223421795326782908603729764275097563754068903262173414745060173089204874483393363662816292954847, 5510161088926463251222114494640752087816725736146374763522063682130377799564500086620388273414339327706629615802502213460273292436170946548319783361590350429688110446615857866944001524283729249191130274597974608761310639260522914671077291867651627761163062267370353904733660928045448151464584819431322269251),(66702024520095365758545911467450264597843402721518451116079155579618499876135795974458813530404059112641484733838831496334406746337298331471144187155770412962372912495593092117693906351202361267398688044043296450215084461088242932530514817716560475039885610399030143504124274724155716227640156138666761421545, 2208337113270368968275451022614351799436458651993242609705118302395178271081051907476514735497151835591515172556262403325865634490235693869300114885126630254299340318246176257014591544666014024311250993443618536287418853733856132065121143685132589087217480710719184064963802020442237043077471607303653265426),(74363941222811334435833776192345661237865034176851326038431852538734261114056038478431577621946100658509704223684558486335440489823844215447714319164716154734890957341827920586022581514630399442170099570056859248556332121463756170339028426898700219346933106184053325606934716110348912404436428001173172099932, 1480028644693427599161674437150262485366277405999042035779653483520569873431859841879504834869440743328820140873156594875303316466794783739641058703275336324001225474442548022702365991492773337022997607461520764069129331567305687026712274707024494314131437592389787508520161227508651775820322297137738380807), (189666762541679173506973919051859424073040061086050222987700549681073006664672045842339868910211529340534161033092994828147856000321236884483192476369098474735573228458508082562563325208502591997254922342578392765922251048798933286780423446810406064132656645669698561846758570854673093312764408544438485617380, 2890285483458479715079180744966553827037384326435604575183223347175822442275856493474425695336230130661604773600911132384775570981780393399452415946025295476598451157985323287880702552700522839614264571222644143622562129320068824891129468916789358183420918665156337144708940884566545600576557490619621304153), (160701255887602967186627087858306437602607188578284701893699825961976393225616893173013182326978559907114350343877787929007820950635140870929191941723430726914000565560268330592108768196076488312207529418396655910121630073333283361194339087533791247551260043549847864341736330336610299456958501492185341302126, 6970013056834961962456038979200713715636991642358216926124217604711007286617742793413946263761386481184595736403417215858869509928889781584877031460567998937279878037421453753353927704881280473784797703287991366531815775073843597424860100398721784756788629405688504128910262033353132858103187102550008043230)]

cs = [c for c, v in real_values]
vs = [v for c, v in real_values]
for i in range(1, len(real_values)):
    for j in range(i):
        ugcd = gcd(vs[i], vs[j])
        if ugcd != 1:
            assert vs[i] % ugcd == 0
            assert vs[j] % ugcd == 0
            vs[i] //= ugcd
            vs[j] //= ugcd
u = crt(cs, vs)
MOD = prod(vs)
R.<x> = PolynomialRing(Integers(MOD), implementation='NTL')
f = x**3 - u
print(MOD.bit_length())
print(m.bit_length())
print(gcd(m**3-u,MOD).bit_length())
print(f.small_roots(beta=0.5, epsilon=0.01))
